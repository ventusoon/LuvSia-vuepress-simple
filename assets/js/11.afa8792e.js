(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{245:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("blockquote",[t("p",[t("em",[t("strong",[a._v("Build ChatGPT Reverse Proxy")])])])]),a._v(" "),t("ul",[t("li",[t("em",[a._v("ChatGPT-Web")]),a._v(" 项目的免费代理挂了，故此，选择本项目 "),t("a",{attrs:{href:"https://github.com/linweiyuan/go-chatgpt-api",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/badge/github-go--chatgpt--api-pink",alt:""}}),t("OutboundLink")],1),a._v(" 来解决代理问题。")])]),a._v(" "),t("h2",{attrs:{id:"搭建步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建步骤"}},[a._v("#")]),a._v(" 搭建步骤")]),a._v(" "),t("h3",{attrs:{id:"一、安装-docker-及-docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、安装-docker-及-docker-compose"}},[a._v("#")]),a._v(" 一、安装 "),t("em",[a._v("Docker")]),a._v(" 及 "),t("em",[a._v("Docker-compose")])]),a._v(" "),t("ul",[t("li",[a._v("安装 "),t("em",[a._v("Docker")])])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#更新、安装必备软件")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" update "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#安装docker：")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sSL")]),a._v(" https://get.docker.com/ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#开机自动启动")]),a._v("\n\nsystemctl start "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),t("ul",[t("li",[a._v("安装 "),t("em",[a._v("Docker-compose")])])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("-"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/local/bin/docker-compose\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose\n")])])]),t("h3",{attrs:{id:"二、安装-go-chatgpt-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、安装-go-chatgpt-api"}},[a._v("#")]),a._v(" 二、安装 "),t("a",{attrs:{href:"https://github.com/linweiyuan/go-chatgpt-api",target:"_blank",rel:"noopener noreferrer"}},[t("em",[a._v("go-chatgpt-api")]),a._v(" "),t("OutboundLink")],1)]),a._v(" "),t("ul",[t("li",[a._v("创建目录")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" /data/docker_data/go-chatgpt-api\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /data/docker_data/go-chatgpt-api\n")])])]),t("ul",[t("li",[a._v("创建 "),t("em",[a._v("docker-compose.yml")]),a._v(" 文件")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" docker-compose.yml\n")])])]),t("ul",[t("li",[a._v("在文件中填入以下内容，然后 "),t("em",[a._v("Ctrl+X")]),a._v(" 保存，按 "),t("em",[a._v("Y")]),a._v(" 退出")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("version: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3"')]),a._v("\nservices:\n  go-chatgpt-api:\n    container_name: go-chatgpt-api\n    image: linweiyuan/go-chatgpt-api\n    ports:\n      - "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 容器端口映射到宿主机8080端口；宿主机监听端口可按需改为其它端口")]),a._v("\n    environment:\n      - "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIN_MODE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("release\n      - "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CHATGPT_PROXY_SERVER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://chatgpt-proxy-server:9515\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#- NETWORK_PROXY_SERVER=http://host:port     # NETWORK_PROXY_SERVER：科学上网代理地址，例如：http://10.0.5.10:7890")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#- NETWORK_PROXY_SERVER=socks5://host:port   # NETWORK_PROXY_SERVER：科学上网代理地址")]),a._v("\n    depends_on:\n      - chatgpt-proxy-server\n    restart: unless-stopped\n\n  chatgpt-proxy-server:\n    container_name: chatgpt-proxy-server\n    image: linweiyuan/chatgpt-proxy-server\n    restart: unless-stopped\n")])])]),t("ul",[t("li",[a._v("创建完成后，运行")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("\n")])])]),t("ul",[t("li",[a._v("检查运行的容器；确保容器状态为UP")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n")])])]),t("ul",[t("li",[a._v("检测容器映射到宿主机的监听端口是否监听")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ss -tnlp"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\n")])])]),t("h3",{attrs:{id:"三、使用自建反代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、使用自建反代"}},[a._v("#")]),a._v(" 三、使用自建反代")]),a._v(" "),t("ul",[t("li",[a._v("使用access token模式，并使用我们自建的代理地址进行访问；自建IP的访问地址为 "),t("em",[a._v("http://ip:8080/conversation")]),a._v(" ；如果不想让 "),t("em",[a._v("ip")]),a._v(" 暴露，可以用 "),t("em",[a._v("nginx")]),a._v(" 再反代 "),t("em",[a._v("ip")]),a._v(" +端口， "),t("em",[a._v("https://example.com/conversation")]),a._v(" 。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 反向代理，可选")]),a._v("\n    API_REVERSE_PROXY: https://example.com/conversation\n")])])]),t("ul",[t("li",[a._v("现在我们访问chatgpt-web，查看是否可以正常使用，注意确保 "),t("em",[a._v("chatgpt-proxy-server")]),a._v(" 运行正常， "),t("em",[a._v("go-chatgpt-api")]),a._v(" 需要初始化启动需要耐心等待")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看容器日志是否运行正常")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" chatgpt-proxy-server\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" go-chatgpt-api\n")])])]),t("h2",{attrs:{id:"完工"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完工"}},[a._v("#")]),a._v(" 完工")]),a._v(" "),t("p",[t("img",{attrs:{src:"/images/ChatGPT-Porxy/1.png",alt:"1",title:":smirk:"}})]),a._v(" "),t("h2",{attrs:{id:"本教程来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本教程来源"}},[a._v("#")]),a._v(" 本教程来源："),t("a",{attrs:{href:"https://github.com/dqzboy/ChatGPT-Porxy",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/badge/github-dqzboy/ChatGPT--Porxy-lemonchiffon",alt:""}}),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);